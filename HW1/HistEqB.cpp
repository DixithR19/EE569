// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;int main(int argc, char *argv[]){	// Define file pointer and variables	FILE *file;	int BytesPerPixel;	int Size1;	int Size2;	// Check for proper syntax	if (argc < 3) {		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name input_image.raw output_image.raw [BytesPerPixel] [Size1] [Size2]" << endl;		return 0;	}	// Check if image is grayscale or color	if (argc < 4) {		BytesPerPixel = 1; // default is grey image	}	else {		BytesPerPixel = atoi(argv[3]);		// Check if size is specified		if (argc >= 5) {			Size1 = atoi(argv[4]);			Size2 = atoi(argv[5]);		}	}	// Allocate image data array	unsigned char Imagedata[Size1][Size2];	unsigned char Image[Size1][Size2];	double nop[256];	// Read image (filename specified by first argument) into image data matrix	if (!(file = fopen(argv[1], "rb"))) {		cout << "Cannot open file: " << argv[1] << endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////	for (int k = 0; k < 256; k++) {		int count=0;		for (int i = 0; i < Size1; i++) {			for (int j = 0; j < Size2; j++) {				if (Imagedata[i][j] == k) {					count++;				}			}		}		nop[k] = count;		//cout << nop[k] << endl;	}	int co1 = 0;	int co11 = 0;	int fmin1,fmax1;	int fmin2,fmax2;	int gmin1 = 0;	int gmax1 = 150;	int gmin2 = 128;	int gmax2 = 255;	for (int k = 0; k < 256; k++) {		if (nop[k] != 0) {			fmin1 = co1;			break;		}		co1++;	}	cout << fmin1<< endl;	for (int k = fmin1; k < 256; k++) {		if (nop[k] == 0) {			fmax1 = co11;			break;		}		co11++;	}	cout << fmax1 << endl;	int co2 = 0;	for (int k = 255; k >=0; k--) {		if (nop[k] != 0) {			fmax2 = 255-co2;			break;		}		co2++;	}	cout << fmax2 << endl;	int co22 = 0;	for (int k = fmax2; k >= 0; k--) {		if (nop[k] == 0) {			fmin2 = 255 - co22;			break;		}		co22++;	}	cout << fmin2 << endl;	for (int i = 0; i < Size1; i++) {		for (int j = 0; j < Size2; j++) {			if (Imagedata[i][j] <= 127) {				Image[i][j] = gmin1 + ((gmax1 - gmin1) / (fmax1 - fmin1))*(Imagedata[i][j] - fmin1);			}			else {				Image[i][j] = gmin2 + ((gmax2 - gmin2) / (fmax2 - fmin2))*(Imagedata[i][j] - fmin2);			}					}	}	//cout << nop[189] << endl;	// Write image data (filename specified by second argument) from image data matrix	if (!(file = fopen(argv[2], "wb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fwrite(Image, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	return 0;}