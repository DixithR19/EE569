// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;int main(int argc, char *argv[]){	// Define file pointer and variables	FILE *file;	int BytesPerPixel;	int Size1;	int Size2;	// Check for proper syntax	if (argc < 3) {		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name input_image.raw output_image1.raw output_image2.raw output_image3.raw [BytesPerPixel] [Size1] [Size2]" << endl;		return 0;	}	// Check if image is grayscale or color	if (argc < 4) {		BytesPerPixel = 1; // default is grey image	}	else {		BytesPerPixel = atoi(argv[5]);		// Check if size is specified		if (argc >= 5) {			Size1 = atoi(argv[6]);			Size2 = atoi(argv[7]);		}	}	// Allocate image data array	unsigned char Imagedata[Size1][Size2][BytesPerPixel];	// Read image (filename specified by first argument) into image data matrix	if (!(file = fopen(argv[1], "rb"))) {		cout << "Cannot open file: " << argv[1] << endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), Size1*Size2*BytesPerPixel, file);	fclose(file);	///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////	unsigned char CImage[Size1][Size2];	unsigned char MImage[Size1][Size2];	unsigned char YImage[Size1][Size2];	for (int i = 0; i < Size1; i++) {		for (int j = 0; j < Size2; j++) {			CImage[i][j] = 255 - Imagedata[i][j][0];			MImage[i][j] = 255 - Imagedata[i][j][1];			YImage[i][j] = 255 - Imagedata[i][j][2];		}	}	// Write image data (filename specified by second argument) from image data matrix	if (!(file = fopen(argv[2], "wb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fwrite(CImage, sizeof(unsigned char), Size1*Size2, file);	fclose(file);		if (!(file = fopen(argv[3], "wb"))) {		cout << "Cannot open file: " << argv[3] << endl;		exit(1);	}	fwrite(MImage, sizeof(unsigned char), Size1*Size2, file);	fclose(file);		if (!(file = fopen(argv[4], "wb"))) {		cout << "Cannot open file: " << argv[4] << endl;		exit(1);	}	fwrite(YImage, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	return 0;}