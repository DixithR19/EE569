// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>using namespace std;int main(int argc, char *argv[]){	// Define file pointer and variables	FILE *file,*file1;	int BytesPerPixel;	int Size1;	int	Size2;	int Size3;	int Size4;	// Check for proper syntax	if (argc < 3) {		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name input_image1.raw input_image2.raw output_image.raw [BytesPerPixel] [Size1] [Size2] [Size3] [Size4]" << endl;		return 0;	}	// Check if image is grayscale or color	if (argc < 5) {		BytesPerPixel = 1; // default is grey image	}	else {		BytesPerPixel = atoi(argv[4]);		// Check if size is specified		if (argc >= 6) {			Size1 = atoi(argv[5]);			Size2 = atoi(argv[6]);			Size3 = atoi(argv[7]);			Size4 = atoi(argv[8]);		}	}	cout << BytesPerPixel << endl;	cout << Size1 << "x" << Size2 << endl;	cout << Size3 << "x" << Size4 << endl;	// Allocate image data 1 array	unsigned char Imagedata1[Size1][Size2][BytesPerPixel];	// Read image (filename specified by first argument) into image data 1 matrix	if (!(file = fopen(argv[1], "rb"))) {		cout << "Cannot open file: " << argv[1] << endl;		exit(1);	}	fread(Imagedata1, sizeof(unsigned char), Size1*Size2*BytesPerPixel, file);	fclose(file);	// Allocate image data 2 array	unsigned char Imagedata2[Size3][Size4][BytesPerPixel];	// Read image (filename specified by first argument) into image data 2 matrix	if (!(file1 = fopen(argv[2], "rb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fread(Imagedata2, sizeof(unsigned char), Size3*Size4*BytesPerPixel, file1);	fclose(file1);		///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////		unsigned char ImageMirror[Size3][Size4][BytesPerPixel];	for (int i = 0; i < Size3; i++) {		for (int j = 0; j < Size4; j++) {			for (int k = 0; k < 3; k++) {				ImageMirror[i][j][k] = Imagedata2[i][299 - j][k];			}		}	}	for (int i = 0; i < Size3; i++)	{		for (int j = 0; j < Size4; j++)		{							for (int k = 0; k < 3; k++)					{					if (!(ImageMirror[i][j][0] <=20 && ImageMirror[i][j][1] <= 20 && ImageMirror[i][j][2] >= 240)){						Imagedata1[i+400][j+1100][k] = ImageMirror[i][j][k];					}				}			}		}				// Write image data (filename specified by second argument) from image data matrix		if (!(file = fopen(argv[3], "wb"))) {			cout << "Cannot open file: " << argv[3] << endl;			exit(1);		}		fwrite(Imagedata1, sizeof(unsigned char), Size1*Size2*BytesPerPixel, file);		fclose(file);		return 0;	}