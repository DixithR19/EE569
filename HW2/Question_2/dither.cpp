// This sample code reads in image data from a RAW image file and // writes it into another file// NOTE:	The code assumes that the image is of size 256 x 256 and is in the//			RAW format. You will need to make corresponding changes to//			accommodate images of different sizes and/or types#include <stdio.h>#include <iostream>#include <stdlib.h>#include <math.h>using namespace std;int main(int argc, char *argv[]){	// Define file pointer and variables	FILE *file;	int BytesPerPixel;	int Size1,Size2;	// Check for proper syntax	if (argc < 3) {		cout << "Syntax Error - Incorrect Parameter Usage:" << endl;		cout << "program_name input_image.raw I2.raw I4.raw I8.raw A4.raw Four_colors.raw [BytesPerPixel] [Size1] [Size2]" << endl;		return 0;	}	// Check if image is grayscale or color	if (argc < 4) {		BytesPerPixel = 1; // default is grey image	}	else {		BytesPerPixel = atoi(argv[7]);		// Check if size is specified		if (argc >= 5) {			Size1 = atoi(argv[8]);			Size2 = atoi(argv[9]);		}	}	// Allocate image data array	unsigned char Imagedata[Size1][Size2];	unsigned char ImageDith2[Size1][Size2];	unsigned char ImageDith4[Size1][Size2];	unsigned char ImageDith8[Size1][Size2];	// Read image (filename specified by first argument) into image data matrix	if (!(file = fopen(argv[1], "rb"))) {		cout << "Cannot open file: " << argv[1] << endl;		exit(1);	}	fread(Imagedata, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	double I2[2][2] = { {0,2},{3,1} };		double I4[4][4];	double I8[8][8];	double T2[2][2];	double T4[4][4];	double T8[8][8];	double F[Size1][Size2];	double G;	/*double G4[Size1][Size2];	double G8[Size1][Size2];*/	///////////////////////// INSERT YOUR PROCESSING CODE HERE /////////////////////////	//Generation of I4	cout << "*************************" << endl;	for (int i = 0; i < 4; i++) {		for (int j = 0; j < 4; j++) {			if (i < 2 && j < 2) {				I4[i][j] = 4 * I2[i][j];			}			else if (i < 2 && j >= 2) {				I4[i][j] = 4 * I2[i][j-2]+2;			}			else if (i >= 2 && j < 2) {				I4[i][j] = 4 * I2[i-2][j] + 3;			}			else if (i >= 2 && j >= 2) {				I4[i][j] = 4 * I2[i-2][j - 2] + 1;			}			cout << I4[i][j] << " ";		}		cout  << endl;	}	cout << "*************************" << endl;	//Generation of I8	for (int i = 0; i < 8; i++) {		for (int j = 0; j < 8; j++) {			if (i < 4 && j < 4) {				I8[i][j] = 4 * I4[i][j];			}			else if (i < 4 && j >= 4) {				I8[i][j] = 4 * I4[i][j - 4] + 2;			}			else if (i >= 4 && j < 4) {				I8[i][j] = 4 * I4[i - 4][j] + 3;			}			else if (i >= 4 && j >= 4) {				I8[i][j] = 4 * I4[i - 4][j - 4] + 1;			}			cout << I8[i][j] << " ";		}		cout << endl;	}	//Generation of T2	for (int i = 0; i < 2; i++) {		for (int j = 0; j < 2; j++) {			T2[i][j] = ((I2[i][j] + 0.5) / 4.0)*255.0;		}	}	//Generation of T4	for (int i = 0; i < 4; i++) {		for (int j = 0; j < 4; j++) {			T4[i][j] = ((I4[i][j] + 0.5) / 16.0)*255.0;		}	}	//Generation of T8	for (int i = 0; i < 8; i++) {		for (int j = 0; j < 8; j++) {			T8[i][j] = ((I8[i][j] + 0.5) / 64.0)*255.0;		}	}	for (int i = 0; i < Size1; i++) {		for (int j = 0; j < Size2; j++) {			F[i][j] = Imagedata[i][j];			if (F[i][j] > T2[i % 2][j % 2]) {				ImageDith2[i][j] = 255;			}			else {				ImageDith2[i][j] = 0;			}						//For T4			if (F[i][j] > T4[i % 4][j % 4]) {				ImageDith4[i][j] = 255;			}			else {				ImageDith4[i][j] = 0;			}			//For T8			if (F[i][j] > T8[i % 8][j % 8]) {				ImageDith8[i][j] = 255;			}			else {				ImageDith8[i][j] = 0;			}			//cout << G[i][j] << endl;		}	}	// Write image data (filename specified by second argument) from image data matrix	if (!(file = fopen(argv[2], "wb"))) {		cout << "Cannot open file: " << argv[2] << endl;		exit(1);	}	fwrite(ImageDith2, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	if (!(file = fopen(argv[3], "wb"))) {		cout << "Cannot open file: " << argv[3] << endl;		exit(1);	}	fwrite(ImageDith4, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	if (!(file = fopen(argv[4], "wb"))) {		cout << "Cannot open file: " << argv[4] << endl;		exit(1);	}	fwrite(ImageDith8, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	//Generation of T4 for A4	double A4[4][4] = { { 14,10,11,15 },{ 9,3,0,4 },{ 8,2,1,5 },{ 13,7,6,12 } };	for (int i = 0; i < 4; i++) {		for (int j = 0; j < 4; j++) {			//cout << A4[i][j] << endl;			T4[i][j] = (A4[i][j] + 0.5) / pow(4, 2);					}	}	for (int i = 0; i < Size1; i++) {		for (int j = 0; j < Size2; j++) {			F[i][j] = (double)Imagedata[i][j] / 255.0;			if (F[i][j] > T4[i % 4][j % 4]) {				G = 1;			}			else {				G = 0;			}			ImageDith4[i][j] = G * 255;		}	}	if (!(file = fopen(argv[5], "wb"))) {		cout << "Cannot open file: " << argv[5] << endl;		exit(1);	}	fwrite(ImageDith4, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	for (int i = 0; i < Size1; i++) {		for (int j = 0; j < Size2; j++) {			if(Imagedata[i][j]>=0 && Imagedata[i][j]<=85)				if (Imagedata[i][j] < 85.0 / 2) {					ImageDith4[i][j] = 0;				}				else {					ImageDith4[i][j] = 85;				}			else if (Imagedata[i][j] >= 85 && Imagedata[i][j] <= 170)				if (Imagedata[i][j] < (170.0-85.0) / 2) {					ImageDith4[i][j] = 85;				}				else {					ImageDith4[i][j] = 170;				}			else if (Imagedata[i][j] >= 170 && Imagedata[i][j] <= 255)				if (Imagedata[i][j] < (255.0 - 170.0) / 2) {					ImageDith4[i][j] = 170;				}				else {					ImageDith4[i][j] = 255;				}
					}	}	if (!(file = fopen(argv[6], "wb"))) {		cout << "Cannot open file: " << argv[6] << endl;		exit(1);	}	fwrite(ImageDith4, sizeof(unsigned char), Size1*Size2, file);	fclose(file);	return 0;}